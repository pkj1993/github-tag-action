name: Bump version

on:
  pull_request:
    types:
      - closed    

jobs:
  Create-Tag:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    name: Create-Tag
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.Create-Tag.outputs.tag }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: '0'

      - name: Check if merged into main or master
        id: check_merge
        run: |
          if [ "${{ github.event.pull_request.merged }}" == "true" ] &&
             [ "${{ github.event.pull_request.base.ref }}" == "main" -o "${{ github.event.pull_request.base.ref }}" == "master" ]; then
            echo "::set-output name=feature_merged::false"
          else
            echo "::set-output name=feature_merged::true"
          fi  

      - name: Display result
        run: |
          feature_merged="${{ steps.check_merge.outputs.feature_merged }}"
          echo "Feature branch merged into main or master: $feature_merged"   

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install semver CLI
        run: npm install -g semver
 
      - name: Extract Labels
        id: extract-labels
        run: |
          # Extract the pull request description from the payload
          description=$(jq -r .pull_request.body $GITHUB_EVENT_PATH)
          
          # Define regular expressions to match labels
          regex="(Major changes|Feature|Bug fix|Refactor|chore)"

          # Extract labels from the description using regex
          if [[ $description =~ $regex ]]; then
            labels="${BASH_REMATCH[1]}"
          fi

          # Set the extracted labels as an output variable
          echo "::set-output name=labels::$labels"

      - name: Use Extracted Labels
        run: |
          extracted_labels="${{ steps.extract-labels.outputs.labels }}"
          echo "Extracted Labels: $extracted_labels" 

      - name: Set custom branch suffix
        id: set_suffix
        run: echo "::set-output name=suffix::ppr"

      - name: Set MAJOR STRING TOKEN
        id: set_MAJOR_STRING
        run: echo "::set-output name=major::major"    

      - name: version-tag
        id: Create-Tag
        uses: ./.github/action
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN }}
          WITH_V: true
          RELEASE_BRANCHES: master
          PRERELEASE: ${{ steps.check_merge.outputs.feature_merged }}
          PRERELEASE_SUFFIX: ${{ steps.set_suffix.outputs.suffix }}
          MAJOR_STRING_TOKEN: ${{ steps.set_MAJOR_STRING.outputs.major }}
          DRY_RUN: true
          
  Create-Release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [Create-Tag]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN }} 
        with:
         tag_name: ${{ needs.Create-Tag.outputs.version }}
         release_name: ${{ needs.Create-Tag.outputs.version }} 

      - name: Upload release binary
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN  }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}    
