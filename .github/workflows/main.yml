name: Bump version

on:
  pull_request:
    types:
      - closed    

jobs:
  Create-Tag:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    name: Create-Tag
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.Create-Tag.outputs.tag }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Determine version type
        id: bump_version
        run: |
          major=$(echo ${{ steps.get_version.outputs.version }} | cut -d '.' -f 1)
          minor=$(echo ${{ steps.get_version.outputs.version }} | cut -d '.' -f 2)
          patch=$(echo ${{ steps.get_version.outputs.version }} | cut -d '.' -f 3)

          if [ -n "$(echo ${{ github.event.pull_request.labels }} | jq 'map(.name) | contains(["major"])')" ]; then
            echo "::set-output name=version::${major}.0.0"
          elif [ -n "$(echo ${{ github.event.pull_request.labels }} | jq 'map(.name) | contains(["minor"])')" ]; then
            echo "::set-output name=version::${major}.$((minor + 1)).0"
          else
            echo "::set-output name=version::${major}.${minor}.$((patch + 1))"
          fi 

      - name: version-tag
        id: Create-Tag
        uses: ./.github/action
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN }}
          WITH_V: true
          RELEASE_BRANCHES: master
        with:
         tag: major  
          
  Create-Release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [Create-Tag]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN }} 
        with:
         tag_name: ${{ needs.Create-Tag.outputs.version }}
         release_name: ${{ needs.Create-Tag.outputs.version }} 

      - name: Upload release binary
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN  }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}    
